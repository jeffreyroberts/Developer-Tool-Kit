#!/usr/bin/env bash
# Usage: tk db-copy [server source] [server destination] [database name]
# Summary: Copys a database from one server to another

# Ensure we have all the vars
database_source=$(eval tk config databases $1)
database_destination=$(eval tk config databases $2)
database_name=$3

if [ -z "$1" -o -z "$database_source" ]; then
	echo "Please specify a valid database source.";
	exit
fi

if [ -z "$2" -o -z "$database_destination" ]; then
	echo "Please specify a valid database destination.";
	exit
fi

if [ -z "$database_name" ]; then
	echo "Please specify a database name.";
	exit
fi

# Grab commands
mysql=$(eval tk config commands mysql)
mysqldump=$(eval tk config commands mysqldump)

# Grab connection settings
source_ip=$(eval tk config databases $1 ip)
source_user=$(eval tk config databases $1 user)
source_pass=$(eval tk config databases $1 pass)

destination_ip=$(eval tk config databases $2 ip)
destination_user=$(eval tk config databases $2 user)
destination_pass=$(eval tk config databases $2 pass)


# Create directories and file vars
backup_dir=$_TK_ROOT/tmp/database-backups/`date +\%Y-\%m-\%d`/
source_file=$1-$database_name-`date +\%H-\%M`.sql
destination_file=$2-$database_name-`date +\%H-\%M`.sql
mkdir -p $backup_dir

# Dump database from source
source_database_exists=$($mysql -u $source_user -h $source_ip -p$source_pass --batch --skip-column-names -e "SHOW DATABASES LIKE '"$database_name"';" | grep "$database_name" > /dev/null; echo "$?")
if [ $source_database_exists -eq 0 ];then
	echo "Dumping $database_name from $1"
	eval $mysqldump -u $source_user -h $source_ip -p$source_pass -e $database_name > $backup_dir$source_file
else
	echo "$database_name does not exist on $1"
	exit;
fi

# Backup destination
destination_database_exists=$($mysql -u $destination_user -h $destination_ip -p$destination_pass --batch --skip-column-names -e "SHOW DATABASES LIKE '"$database_name"';" | grep "$database_name" > /dev/null; echo "$?")
if [ $destination_database_exists -eq 0 ];then
	echo "Backing up $2 $database_name"
	eval $mysqldump -u $destination_user -h $destination_ip -p$destination_pass -e $database_name > $backup_dir$destination_file
	$mysql -u $destination_user -h $destination_ip -p$destination_pass -e "DROP DATABASE $database_name"
fi


# Import into destination
echo "Importing $database_name into $2"
$mysql -u $destination_user -h $destination_ip -p$destination_pass -e "CREATE DATABASE $database_name"
$mysql -u $destination_user -h $destination_ip -p$destination_pass $database_name < $backup_dir$source_file